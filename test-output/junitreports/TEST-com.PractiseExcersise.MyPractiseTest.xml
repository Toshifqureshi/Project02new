<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Toshif" failures="0" tests="9" name="com.PractiseExcersise.MyPractiseTest" time="0.207" errors="1" timestamp="2023-10-14T18:52:24 IST" skipped="0">
  <testcase classname="com.PractiseExcersise.MyPractiseTest" name="dataProvider" time="0.007"/>
  <system-out/>
  <testcase classname="com.PractiseExcersise.MyPractiseTest" name="getSystemDateInFormat" time="0.004"/>
  <system-out/>
  <testcase classname="com.PractiseExcersise.MyPractiseTest" name="dataProvider" time="0.003"/>
  <system-out/>
  <testcase classname="com.PractiseExcersise.MyPractiseTest" name="date1" time="0.017"/>
  <system-out/>
  <testcase classname="com.PractiseExcersise.MyPractiseTest" name="dataProvider" time="0.014"/>
  <system-out/>
  <testcase classname="com.PractiseExcersise.MyPractiseTest" name="excelread" time="0.069"/>
  <system-out/>
  <testcase classname="com.PractiseExcersise.MyPractiseTest" name="random" time="0.000"/>
  <system-out/>
  <testcase classname="com.PractiseExcersise.MyPractiseTest" name="propertyfile" time="0.015"/>
  <system-out/>
  <testcase classname="com.PractiseExcersise.MyPractiseTest" name="excelWrite" time="0.078">
    <error message="The workbook already contains a sheet named &#039;Toshif&#039;" type="java.lang.IllegalArgumentException">
      <![CDATA[java.lang.IllegalArgumentException: The workbook already contains a sheet named 'Toshif'
at org.apache.poi.xssf.usermodel.XSSFWorkbook.validateSheetName(XSSFWorkbook.java:914)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:867)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:123)
at com.PractiseExcersise.MyPractiseTest.excelWrite(MyPractiseTest.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- excelWrite -->
  <system-out/>
</testsuite> <!-- com.PractiseExcersise.MyPractiseTest -->
